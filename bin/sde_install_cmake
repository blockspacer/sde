#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2019 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "ERROR: $@"
	exit 1
}

warn()
{
	echo "WARNING: $@"
}

usage()
{
	if [ $# -gt 0 ]; then
		echo "BAD USAGE: $@"
	fi
	cat <<- EOF
	usage: $0 [options]

	This command downloads and installs CMake.
	The -v and -d options must be specified.

	Options:
	-v \$version
	    Specify the version of CMake to install as \$version
	    (e.g., 5.0.0).
	    This option must be spcified.
	-d \$install_dir
	    Set the installation directory to \$install_dir.
	    This option must be spcified.
	-r
	    Install from Git repository.

	Example:
	$0 -v 3.14.0-rc4 -d /usr/local/cmake-3.14.0-rc4
	$0 -v 3.14.1 -d /usr/local/cmake-3.14.1
	EOF

	exit 2
}

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

repository=0
version=
install_dir=
tmp_dir="/tmp/sde_install_cmake-$user@$host-$$"

while getopts d:v:hr opt; do
	case "$opt" in
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	r)
		repository=1;;
	h)
		usage;;
	\?)
		usage;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
if [ -z "$version" ]; then
	usage "no version specified"
fi

install_dir=$(realpath "$install_dir") || \
  panic "cannot get absolute path for installation directory"

src_dir="$tmp_dir/cmake"
build_dir="$tmp_dir/build"

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

mkdir -p "$tmp_dir" || \
  panic "cannot make temporary directory $tmp_dir"

if [ "$repository" -ne 0 ]; then
	repo_url="https://gitlab.kitware.com/cmake/cmake.git"
	commit="v$version"
	git clone "$repo_url" "$src_dir" || \
	  panic "cannot clone repository"
	(cd "$src_dir" && git checkout "$commit") || \
	  panic "cannot checkout"
else
	archive_url="https://github.com/Kitware/CMake/releases/download/v$version/cmake-$version.tar.gz"
	archive_base=$(basename "$archive_url") || panic "cannot get basename"
	archive_file="$tmp_dir/$archive_base"
	wget -O "$archive_file" "$archive_url" || panic "cannot download archive"
	mkdir -p "$src_dir" || panic "cannot make directory"
	tar -x -z --strip-components=1 -C "$src_dir" -f "$archive_file" || \
	  panic "cannot extract archive"
fi

mkdir -p "$build_dir" || \
  panic "cannot make build directory"

(cd "$build_dir" && \
  ../cmake/bootstrap --parallel=4 --prefix="$install_dir") || \
  panic "cannot bootstrap"

(cd "$build_dir" && make -j4 install) || \
  panic "cannot build/install"

if [ -n "$tmp_dir" -a -d "$tmp_dir" ]; then
	rm -rf "$tmp_dir"
fi

exit 0
